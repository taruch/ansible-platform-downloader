---

- name: Downloading the installer tarball
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Downloading the installer tarball
      ansible.builtin.include_role:
        name: infra.aap_utilities.aap_setup_download
      vars:
        # aap_setup_down_offline_token contains your offline token as described in the requirements. It has no default value and must be defined.
        aap_setup_down_offline_token: "{{ lookup('ansible.builtin.env', 'offline_token') | default(omit) }}"
        # aap_setup_down_version defines the minor version to download (e.g. 2.5). Defaults to current latest 2.5 version. 
        # The default is the latest version available at time of writing.
        aap_setup_down_version: "2.5"
        # aap_setup_down_dest_dir is the directory to where you want to download the tarball. It is by default the working directory 
        # aap_setup_working_dir also used by other roles of the collection, or ultimately /var/tmp.
        aap_setup_down_dest_dir: "{{ aap_setup_working_dir | default('/var/tmp') }}"
        # aap_setup_down_type can be either setup, setup-bundle, containerized-setup, depending which flavour of the tarball you want to download.
        aap_setup_down_type: setup-bundle
        # aap_setup_down_type: containerized-setup
        # aap_setup_rhel_version defines the major RHEL version being used (currently 8 or 9). If you are gathering facts you possibly don't
        # need to specify this as the role will attempt to work out the value required though you will if AAP will be installed on machines on a 
        # different OS than the installer will run on. Otherwise the default is 8.
        aap_setup_rhel_version: "9"
        # aap_setup_containerized if set to true the role will download the the containerized installer.
        aap_setup_containerized: true
        # aap_setup_arch define the processor architecture of the installer. Default to "x86_64"
        aap_setup_arch: "x86_64"

